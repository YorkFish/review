<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bit operation on York&#39;s blog</title>
    <link>https://yorkfish.github.io/review/c/bit/</link>
    <description>Recent content in bit operation on York&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy;2020, All Rights Reserved</copyright>
    <lastBuildDate>Thu, 10 Sep 2020 00:00:00 +0800</lastBuildDate>
    
        <atom:link href="https://yorkfish.github.io/review/c/bit/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>01 位运算简介</title>
        <link>https://yorkfish.github.io/review/c/bit/01-overview/</link>
        <pubDate>Thu, 10 Sep 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/c/bit/01-overview/</guid>
        <description>1. 与 &amp;amp; 若参加与运算的是负数，则以补码形式表示二进制，然后“按位与” 作用 清零 取出数中指定位 保留数中指定位 2. 或 | 对一个数据的某些位定值为 1 3. 异或</description>
      </item>
      
      <item>
        <title>02. 举例</title>
        <link>https://yorkfish.github.io/review/c/bit/02-examples/</link>
        <pubDate>Thu, 10 Sep 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/c/bit/02-examples/</guid>
        <description>例一 取某几位数 求整数 a 右端的 4~7 位 原码：xxxx ... xxxx xxxx 位数：xxxx ... 7654 3210 1 2 3 4 5 6 7 8 9 10 11 12 #include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt; int main() { short a = 666; // 0b0000 0010 1001 1010 short b = (a&amp;gt;&amp;gt;4) &amp;amp; ~(~0 &amp;lt;&amp;lt;</description>
      </item>
      
      <item>
        <title>03. 位段</title>
        <link>https://yorkfish.github.io/review/c/bit/03-bit-field/</link>
        <pubDate>Thu, 10 Sep 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/c/bit/03-bit-field/</guid>
        <description>1. 简介 C 语言允许在结构体中以位为单位，来指定其成员所占内存长度 这种以位为单位的成员称为“位段”或“位域” bit field 利用位段能够利用较少的位数存储数</description>
      </item>
      
    
  </channel>
</rss>