<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>枚举 on York&#39;s blog</title>
    <link>https://yorkfish.github.io/review/tags/%E6%9E%9A%E4%B8%BE/</link>
    <description>Recent content in 枚举 on York&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy;2020 - 2021, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 21 Feb 2021 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://yorkfish.github.io/review/tags/%E6%9E%9A%E4%B8%BE/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>通信网络</title>
        <link>https://yorkfish.github.io/review/blog/27-exercise-02-20/</link>
        <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yorkfish.github.io/review/blog/27-exercise-02-20/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;活动时间：2021-02-20&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;题目描述&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AcWing 3250&lt;/li&gt;
&lt;li&gt;&lt;font color=&#34;orange&#34;&gt;中等&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;某国的军队由 N 个部门组成，为了提高安全性，部门之间建立了 M 条通路，每条通路只能单向传递信息，即一条从部门 a 到部门 b 的通路只能由 a 向 b 传递信息。&lt;/li&gt;
&lt;li&gt;信息可以通过中转的方式进行传递，即如果 a 能将信息传递到 b，b 又能将信息传递到 c，则 a 能将信息传递到 c。&lt;/li&gt;
&lt;li&gt;一条信息可能通过多次中转最终到达目的地。&lt;/li&gt;
&lt;li&gt;由于保密工作做得很好，并不是所有部门之间都互相知道彼此的存在。&lt;/li&gt;
&lt;li&gt;只有当两个部门之间可以直接或间接传递信息时，他们才彼此知道对方的存在。&lt;/li&gt;
&lt;li&gt;部门之间不会把自己知道哪些部门告诉其他部门。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://yorkfish.github.io/review/review/imgs/blog/exercises/info_net.png&#34; alt=&#34;info-net&#34;  title=&#34;net&#34;  /&gt;
&lt;/p&gt;&lt;/p&gt;</description>
      </item>
      
      <item>
        <title>有趣的数</title>
        <link>https://yorkfish.github.io/review/blog/24-exercise-02-16/</link>
        <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yorkfish.github.io/review/blog/24-exercise-02-16/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;活动时间：2021-02-16&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;题目描述&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AcWing 3195&lt;/li&gt;
&lt;li&gt;&lt;font color=&#34;orange&#34;&gt;中等&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;我们把一个数称为有趣的，当且仅当
&lt;ol&gt;
&lt;li&gt;它的数字只包含 0,1,2,3，且这四个数字都出现过至少一次。&lt;/li&gt;
&lt;li&gt;所有的 0 都出现在所有的 1 之前，而所有的 2 都出现在所有的 3 之前。&lt;/li&gt;
&lt;li&gt;最高位数字不为 0。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;因此，符合我们定义的最小的有趣的数是 2013。&lt;/li&gt;
&lt;li&gt;除此以外，4 位的有趣的数还有两个：2031 和 2301。&lt;/li&gt;
&lt;li&gt;请计算恰好有 n 位的有趣的数的个数。&lt;/li&gt;
&lt;li&gt;由于答案可能非常大，只需要输出答案除以 10&lt;sup&gt;9&lt;/sup&gt;+7 的余数。&lt;/li&gt;
&lt;/ul&gt;</description>
      </item>
      
      <item>
        <title>鱼塘钓鱼</title>
        <link>https://yorkfish.github.io/review/blog/17-exercise-02-08/</link>
        <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yorkfish.github.io/review/blog/17-exercise-02-08/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;活动时间：2021-02-08&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;题目描述&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AcWing 1262&lt;/li&gt;
&lt;li&gt;&lt;font color=&#34;green&#34;&gt;简单&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;有 N 个鱼塘排成一排，每个鱼塘中有一定数量的鱼，例如：N=5 时，如下表&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;鱼塘编号&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;1&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;2&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;3&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;4&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;5&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;第 1 分钟能钓到的鱼的数量(1&amp;hellip;1000)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;14&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;20&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;16&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;每钓鱼 1 分钟钓鱼数的减少量(1&amp;hellip;100)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;当前鱼塘到下一个相邻鱼塘需要的时间（单位：分钟）&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;即：在第 1 个鱼塘中钓鱼第 1 分钟内可钓到 10 条鱼，第 2 分钟内只能钓到 8 条鱼，……，第 5 分钟以后再也钓不到鱼了。&lt;/li&gt;
&lt;li&gt;从第 1 个鱼塘到第 2 个鱼塘需要 3 分钟，从第 2 个鱼塘到第 3 个鱼塘需要 5 分钟，……&lt;/li&gt;
&lt;li&gt;给出一个截止时间 T，设计一个钓鱼方案，从第 1 个鱼塘出发，希望能钓到最多的鱼。&lt;/li&gt;
&lt;li&gt;假设能钓到鱼的数量仅和已钓鱼的次数有关，且每次钓鱼的时间都是整数分钟。&lt;/li&gt;
&lt;/ul&gt;</description>
      </item>
      
    
  </channel>
</rss>