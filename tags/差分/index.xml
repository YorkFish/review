<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>差分 on York&#39;s blog</title>
    <link>https://yorkfish.github.io/review/tags/%E5%B7%AE%E5%88%86/</link>
    <description>Recent content in 差分 on York&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy;2020 - 2021, All Rights Reserved</copyright>
    <lastBuildDate>Mon, 15 Feb 2021 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://yorkfish.github.io/review/tags/%E5%B7%AE%E5%88%86/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>积木大赛</title>
        <link>https://yorkfish.github.io/review/blog/22-exercise-02-14/</link>
        <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yorkfish.github.io/review/blog/22-exercise-02-14/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;活动时间：2021-02-14&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;题目描述&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AcWing 507&lt;/li&gt;
&lt;li&gt;&lt;font color=&#34;orange&#34;&gt;中等&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;春春幼儿园举办了一年一度的“积木大赛”。&lt;/li&gt;
&lt;li&gt;今年比赛的内容是搭建一座宽度为 n 的大厦，大厦可以看成由 n 块宽度为 1 的积木组成，&lt;/li&gt;
&lt;li&gt;第 i 块积木的最终高度需要是 h&lt;sub&gt;i&lt;/sub&gt;。&lt;/li&gt;
&lt;li&gt;在搭建开始之前，没有任何积木（可以看成块高度为 0 的积木）。&lt;/li&gt;
&lt;li&gt;接下来每次操作，小朋友们可以选择一段连续区间 [L,R]，然后将第 L 块到第 R 块之间（含第 L 块和第 R 块）所有积木的高度分别增加 1。&lt;/li&gt;
&lt;li&gt;小M是个聪明的小朋友，她很快想出了建造大厦的最佳策略，使得建造所需的操作次数最少。&lt;/li&gt;
&lt;li&gt;但她不是一个勤于动手的孩子，所以想请你帮忙实现这个策略，并求出最少的操作次数。&lt;/li&gt;
&lt;/ul&gt;</description>
      </item>
      
      <item>
        <title>借教室</title>
        <link>https://yorkfish.github.io/review/blog/15-exercise-02-06/</link>
        <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
        
        <guid>https://yorkfish.github.io/review/blog/15-exercise-02-06/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;活动时间：2021-02-06&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;题目描述&#34;&gt;题目描述&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AcWing 503&lt;/li&gt;
&lt;li&gt;&lt;font color=&#34;green&#34;&gt;简单&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;在大学期间，经常需要租借教室。&lt;/li&gt;
&lt;li&gt;大到院系举办活动，小到学习小组自习讨论，都需要向学校申请借教室。&lt;/li&gt;
&lt;li&gt;教室的大小功能不同，借教室人的身份不同，借教室的手续也不一样。 &lt;/li&gt;
&lt;li&gt;面对海量租借教室的信息，我们自然希望编程解决这个问题。&lt;/li&gt;
&lt;li&gt;我们需要处理接下来 n 天的借教室信息，其中第 i 天学校有 r&lt;sub&gt;i&lt;/sub&gt; 个教室可供租借。&lt;/li&gt;
&lt;li&gt;共有 m 份订单，每份订单用三个正整数描述，分别为 d&lt;sub&gt;j&lt;/sub&gt;, s&lt;sub&gt;j&lt;/sub&gt;, t&lt;sub&gt;j&lt;/sub&gt;，&lt;/li&gt;
&lt;li&gt;表示某租借者需要从第 s&lt;sub&gt;j&lt;/sub&gt; 天到第 t&lt;sub&gt;j&lt;/sub&gt; 天租借教室（包括第 s&lt;sub&gt;j&lt;/sub&gt; 天和第 t&lt;sub&gt;j&lt;/sub&gt; 天），每天需要租借 d&lt;sub&gt;j&lt;/sub&gt; 个教室。 &lt;/li&gt;
&lt;li&gt;我们假定，租借者对教室的大小、地点没有要求。&lt;/li&gt;
&lt;li&gt;即对于每份订单，我们只需要每天提供 d&lt;sub&gt;j&lt;/sub&gt; 个教室，而它们具体是哪些教室，每天是否是相同的教室则不用考虑。 &lt;/li&gt;
&lt;li&gt;借教室的原则是先到先得，也就是说我们要按照订单的先后顺序依次为每份订单分配教室。&lt;/li&gt;
&lt;li&gt;如果在分配的过程中遇到一份订单无法完全满足，则需要停止教室的分配，通知当前申请人修改订单。&lt;/li&gt;
&lt;li&gt;这里的无法满足指从第 s&lt;sub&gt;j&lt;/sub&gt; 天到第 t&lt;sub&gt;j&lt;/sub&gt; 天中有至少一天剩余的教室数量不足 d&lt;sub&gt;j&lt;/sub&gt; 个。&lt;/li&gt;
&lt;li&gt;现在我们需要知道，是否会有订单无法完全满足。&lt;/li&gt;
&lt;li&gt;如果有，需要通知哪一个申请人修改订单。&lt;/li&gt;
&lt;/ul&gt;</description>
      </item>
      
    
  </channel>
</rss>