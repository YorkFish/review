<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CPP on York&#39;s blog</title>
    <link>https://yorkfish.github.io/review/cpp/</link>
    <description>Recent content in CPP on York&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy;2020, All Rights Reserved</copyright>
    <lastBuildDate>Tue, 17 Nov 2020 00:00:00 +0800</lastBuildDate>
    
        <atom:link href="https://yorkfish.github.io/review/cpp/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>01. preview</title>
        <link>https://yorkfish.github.io/review/cpp/01_preview/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/01_preview/</guid>
        <description>第一个 C++ 程序 1 2 3 4 5 6 7 8 9 10 #include &amp;lt;iostream&amp;gt; using namespace std; int main() { cout &amp;lt;&amp;lt; &amp;#34;Hello World&amp;#34; &amp;lt;&amp;lt; endl; return 0; }</description>
      </item>
      
      <item>
        <title>02. head file</title>
        <link>https://yorkfish.github.io/review/cpp/02_head_file/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/02_head_file/</guid>
        <description>1. 万能头文件 #include &amp;lt;bits/stdc++.h&amp;gt; 2. iostream 包含了许多常用的工具 cin, cout max(), min() string 有的编译器必须要导入 &amp;lt;string&amp;gt; scanf(), printf() 使用它们的话，最好还是添加一下 &amp;lt;cstdio&amp;gt; 3. cstdio scanf(), printf() 比 cin, cout 快 scanf() 在有 %c 时，会读</description>
      </item>
      
      <item>
        <title>03. accuracy and output</title>
        <link>https://yorkfish.github.io/review/cpp/03_accuracy_and_format_output/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/03_accuracy_and_format_output/</guid>
        <description>1. 精度 类型 有效数字 float 6~ 7 位 double 15~16 位 long double 18~19 位 1 2 3 4 5 6 7 8 9 #include &amp;lt;cstdio&amp;gt;#include &amp;lt;cmath&amp;gt; int main() { printf(&amp;#34;a = %.20f\n&amp;#34;, sqrt(3) * sqrt(3)); return 0; } &amp;gt;&amp;gt;&amp;gt; a = 2.99999999999999955591 ps 一般两数之差小于 1e-6，就认为两数相等 可</description>
      </item>
      
      <item>
        <title>04. input and output</title>
        <link>https://yorkfish.github.io/review/cpp/04_input_and_output/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/04_input_and_output/</guid>
        <description>1. 连续读入 方式一 1 2 3 4 5 6 7 8 9 10 11 #include &amp;lt;iostream&amp;gt; using namespace std; int main() { int x; while (cin &amp;gt;&amp;gt; x &amp;amp;&amp;amp; x) cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl; return 0; } 输入 1 2 3 4 5 0 返回值 1 2 3 4 5 0 方式二 1 2 3 4 5 6 7</description>
      </item>
      
      <item>
        <title>05. logical operation</title>
        <link>https://yorkfish.github.io/review/cpp/05_logical_operation/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/05_logical_operation/</guid>
        <description>与、或、非 默认：&amp;amp;&amp;amp;, ||, ! 支持：and, or, not 可以和 Python 一样用 1 2 3 4 5 6 7 8 9 10 11 12 #include &amp;lt;iostream&amp;gt; using namespace std; int main() { if (1 and 1) cout &amp;lt;&amp;lt; &amp;#34;&amp;#39;and&amp;#39; is ok&amp;#34; &amp;lt;&amp;lt; endl; if (0</description>
      </item>
      
      <item>
        <title>06. array</title>
        <link>https://yorkfish.github.io/review/cpp/06_array/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/06_array/</guid>
        <description>1. 一些概念 函数内的数组会存在栈空间，约 1 M 函数外的数组会存在堆空间，能开多大取决于内存大小 函数外定义的变量、数组等全局变量，若没有初始化，默</description>
      </item>
      
      <item>
        <title>07. string</title>
        <link>https://yorkfish.github.io/review/cpp/07_string/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/07_string/</guid>
        <description>1. 字符数组与字符串 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include &amp;lt;iostream&amp;gt; using namespace std; int main() { char s1[] = {&amp;#39;y&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;r&amp;#39;, &amp;#39;k&amp;#39;}; // 字符数组 char s2[] = {&amp;#39;y&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;r&amp;#39;, &amp;#39;k&amp;#39;, &amp;#39;\0&amp;#39;}; // 既是字符数组，也是字符串 char</description>
      </item>
      
      <item>
        <title>08. pair</title>
        <link>https://yorkfish.github.io/review/cpp/08_pair/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/08_pair/</guid>
        <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include &amp;lt;iostream&amp;gt; using namespace std; int main() { pair&amp;lt;char, int&amp;gt; p1{&amp;#39;a&amp;#39;, 97}; cout &amp;lt;&amp;lt; p1.first &amp;lt;&amp;lt; &amp;#39; &amp;#39; &amp;lt;&amp;lt; p1.second &amp;lt;&amp;lt; endl; pair&amp;lt;char, int&amp;gt; p2; p2 = make_pair(&amp;#39;b&amp;#39;, 98); // c++98 需要借助函数定义 cout &amp;lt;&amp;lt; p2.first &amp;lt;&amp;lt; &amp;#39; &amp;#39; &amp;lt;&amp;lt; p2.second &amp;lt;&amp;lt; endl; // pair 六种</description>
      </item>
      
      <item>
        <title>09. function</title>
        <link>https://yorkfish.github.io/review/cpp/09_function/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/09_function/</guid>
        <description>1. 一些概念 放在堆里的数据 第一次使用前不会被分配空间，而是放到 .bss 段 第一次使用时会动态分配空间，同时初始化成 0，且分配的空间都在堆中 有返回值的函</description>
      </item>
      
      <item>
        <title>10. struct</title>
        <link>https://yorkfish.github.io/review/cpp/10_struct/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/10_struct/</guid>
        <description>1. 一些概念 和 C 相比 多了一个“构造函数” C 需要使用 struct struct_name var_name; C++ 只需使用 struct_name var_name; 可以添加 private 使成员变量变成私有的 2. 举例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18</description>
      </item>
      
      <item>
        <title>11. class</title>
        <link>https://yorkfish.github.io/review/cpp/11_class/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/11_class/</guid>
        <description>1. 一些概念 类中的变量和函数被统一称为类的成员变量 private 的内容是私有成员变量，在类的外部不能访问 public 的内容是公有成员变量，在类的外部可以访问 类与结构</description>
      </item>
      
      <item>
        <title>12. bit operation</title>
        <link>https://yorkfish.github.io/review/cpp/12_bit_operation/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/12_bit_operation/</guid>
        <description>1. 名称 符号 英文 中文 &amp;amp; and 与 | or 或 ~ not 取反 ^ xor 异或 2. 常用操作 -a 与 (~a + 1) 的二进制是一样的 求 x 的第 k 位数字：x &amp;gt;&amp;gt; k &amp;amp; 1 返回 x 的最后一位 1 x &amp;amp; -x lowbit(x) 3. 举</description>
      </item>
      
      <item>
        <title>13. library function</title>
        <link>https://yorkfish.github.io/review/cpp/13_library_function/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/13_library_function/</guid>
        <description>1. reverse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;vector&amp;gt; using namespace std; int main() { // reverse - vector vector&amp;lt;int&amp;gt; nums1{1, 2, 3, 4, 5}; reverse(nums1.begin(), nums1.end()); for (int num : nums1) cout &amp;lt;&amp;lt; num &amp;lt;&amp;lt; &amp;#39; &amp;#39;; cout &amp;lt;&amp;lt; endl; // reverse - array int nums2[] = {1, 2, 3,</description>
      </item>
      
      <item>
        <title>STL</title>
        <link>https://yorkfish.github.io/review/cpp/stl/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
        
        <guid>https://yorkfish.github.io/review/cpp/stl/</guid>
        <description></description>
      </item>
      
    
  </channel>
</rss>